apiVersion: v1
kind: Service
metadata:
  name: manager
  annotations:
    {{- toYaml .Values.service.annotations | nindent 4 }}
  labels:
    {{- include "harness.service.labels" . | nindent 4 }}
spec:
  ports:
    - name: manager-http
      port: 9090
    - name: manager-grpc
      port: 9879
  selector:
    app: manager

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "harness.serviceAccountName" . }}
  annotations:
    {{- toYaml .Values.serviceAccount.annotations | nindent 4 }}
  labels:
    {{- include "harness.labels" . | nindent 4 }}
    {{- if .Values.serviceAccount.labels }}
      {{- toYaml .Values.serviceAccount.labels | nindent 4 }}
    {{- end }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: manager-config
  annotations:
    {{- toYaml .Values.configMap.annotations | nindent 4 }}
  labels:
    {{- include "harness.configMap.labels" . | nindent 4 }}
data:
  ALLOWED_ORIGINS: http://proxy
  {{ if .Values.harness_host }}
  API_URL: http://{{ .Values.harness_host }}:{{ .Values.listen_port }}
  {{ else }}
  API_URL: http://proxy
  {{ end }}
  ARTIFACT_COLLECTION_ITERATOR_THREAD_COUNT: '2'
  ATMOSPHERE_BACKEND: REDIS
  BACKGROUND_SCHEDULER_CLUSTERED: 'true'
  BLOCKING_CAPABILITY_PERMISSIONS_RECORD_ITERATOR_THREAD_COUNT: '2'
  CACHE_BACKEND: REDIS
  CAPSULE_JAR: rest-capsule.jar
  COMMON_POOL_CORE_SIZE: '{{ .Values.manager.config.common_pool_core_size | default "1" }}'
  COMMON_POOL_MAX_SIZE: '{{ .Values.manager.config.common_pool_max_size | default "10" }}'
  CRONS_THREAD_COUNT: '1'
  DELEGATE_CAPABILITIES_RECORD_ITERATOR_THREAD_COUNT: '{{ .Values.manager.config.delegate_capabilities_record_iterator_thread_count | default "2" }}'
  DELEGATE_DOCKER_IMAGE: harness/delegate:latest
  DELEGATE_GRPC_AUTHORITY: default-authority.harness.io
  DELEGATE_GRPC_TARGET: {{ .Values.harness_host | default "proxy" }}:9879
  DELEGATE_METADATA_URL: http://proxy/storage/wingsdelegates/delegateprod.txt
  DELEGATE_SERVICE_AUTHORITY: default-authority.harness.io
  DELEGATE_SERVICE_TARGET: manager:9879
  DELEGATE_TASK_EXPIRY_CHECK_ITERATOR_THREAD_COUNT: '{{ .Values.manager.config.delegate_task_expiry_check_iterator_thread_count | default "2" }}'
  DEPLOYMENT_EVENT_LISTENER_COUNT: '{{ .Values.manager.config.deployment_event_listener_count | default "1" }}'
  DEPLOYMENT_TIME_SERIES_EVENT_LISTENER_COUNT: '{{ .Values.manager.config.deployment_time_series_event_listener_count | default "1" }}'
  DEPLOY_MODE: KUBERNETES_ONPREM
  DEPLOY_VERSION: COMMUNITY
  DISABLE_RESOURCE_VALIDATION: 'true'
  DISTRIBUTED_LOCK_IMPLEMENTATION: REDIS
  ENABLE_AUDIT: 'false'
  ENABLE_SERIALGC: 'true'
  EVENTS_FRAMEWORK_AVAILABLE_IN_ONPREM: 'true'
  EVENTS_FRAMEWORK_NETTY_THREADS: '{{ .Values.manager.config.events_framework_netty_threads | default "1" }}'
  EVENTS_FRAMEWORK_REDIS_URL: redis://redis:6379
  EVENT_DELIVERY_ITERATOR_THREAD_COUNT: '{{ .Values.manager.config.event_delivery_iterator_thread_count | default "2" }}'
  EXECUTION_EVENT_LISTENER_COUNT: '{{ .Values.manager.config.execution_event_listener_count | default "1" }}'
  FEATURES: RBAC,LDAP_SSO_PROVIDER,SHELL_SCRIPT_PROVISION,CUSTOM_DASHBOARD,GRAPHQL,SEND_SLACK_NOTIFICATION_FROM_DELEGATE,CONNECTORS_REF_SECRETS_MIGRATION,CDNG_ENABLED,NEXT_GEN_ENABLED,LOG_STREAMING_INTEGRATION,NG_CG_TASK_ASSIGNMENT_ISOLATION,NG_GIT_ERROR_EXPERIENCE
  GATEWAY_PATH_PREFIX: ''
  GENERAL_NOTIFY_EVENT_LISTENER_COUNT: '{{ .Values.manager.config.general_notify_event_listener_count | default "1" }}'
  GRAPHQL_ENABLED: 'false'
  HARNESS_ENABLE_NG_AUTH_UI_PLACEHOLDER: 'true'
  INSTANCE_SYNC_ITERATOR_THREAD_COUNT: '2'
  IMMUTABLE_DELEGATE_DOCKER_IMAGE: harness/delegate:22.12.77629
  UPGRADER_DOCKER_IMAGE: harness/upgrader:latest
  JAVA_ADVANCED_FLAGS: -XX:-TieredCompilation
  LICENSE_INFO: trialLicense
  LOGGERS: org.reflections.Reflections=ERROR
  LOGGING_LEVEL: WARN
  {{ if .Values.harness_host }}
  LOG_STREAMING_SERVICE_BASEURL: http://{{ .Values.harness_host }}:{{ .Values.listen_port }}/log-service/
  {{ else }}
  LOG_STREAMING_SERVICE_BASEURL: http://proxy/log-service/
  {{ end }}
  LOG_STREAMING_SERVICE_TOKEN: c76e567a-b341-404d-a8dd-d9738714eb82
  MEMORY: '{{ .Values.manager.config.memory }}'
  NG_MANAGER_BASE_URL: http://proxy/ng/api/
  ORCHESTRATION_NOTIFY_EVENT_LISTENER_COUNT: '{{ .Values.manager.config.orchestration_notify_event_listener_count | default "1" }}'
  PERPETUAL_TASK_ASSIGNMENT_ITERATOR_THREAD_COUNT: '{{ .Values.manager.config.perpetual_task_assignment_iterator_thread_count | default "2" }}'
  PERPETUAL_TASK_REBALANCE_ITERATOR_THREAD_COUNT: '{{ .Values.manager.config.perpetual_task_rebalance_iterator_thread_count | default "2" }}'
  REDIS_NETTY_THREADS: '1'
  REDIS_URL: redis://redis:6379
  RESOURCE_CONSTRAINT_BACKUP_ITERATOR_THREAD_COUNT: '2'
  SEARCH_ENABLED: 'false'
  SEGMENT_ENABLED_NG: 'true'
  SEGMENT_URL_NG: https://stats.drone.ci/api/v1/
  SERVER_MAX_THREADS: '{{ .Values.manager.config.server_max_threads | default "12" }}'
  SERVER_PORT: '9090'
  SERVICE_ACC: /opt/harness/svc/service_acc.json
  SETTING_ATTRIBUTE_VALIDATE_CONNECTIVITY_ITERATOR_THREAD_COUNT: '2'
  UI_SERVER_URL: http://{{ .Values.harness_host | default "proxy" }}:{{ .Values.listen_port }}
  VAULT_SECRET_MANAGER_ITERATOR_THREAD_COUNT: '2'
  VERSION: 1.0.{{ .Values.versions.manager }}
  WATCHER_METADATA_URL: http://proxy/storage/wingswatchers/watcherprod.txt
  WORKFLOW_EXECUTION_MONITOR_ITERATOR_THREAD_COUNT: '2'
---

apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: manager-config
  annotations:
    {{- toYaml .Values.secret.annotations | nindent 4 }}
  labels:
    {{- include "harness.secret.labels" . | nindent 4 }}
stringData:
  MONGO_URI: 'mongodb://admin:dOkcGof8zL@mongodb-replicaset-chart.{{ .Release.Namespace }}.svc/harness?authSource=admin'

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: manager
  annotations:
    {{- toYaml .Values.deployment.annotations | nindent 4 }}
  labels:
    {{- include "harness.deployment.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.manager.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: manager
  template:
    metadata:
      annotations:
        {{- toYaml .Values.replica.annotations | nindent 8 }}
      labels:
        app: manager
        {{- include "harness.replica.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "harness.serviceAccountName" . }}
      initContainers:
        - name: check-for-mongo
          image: harness/mongo:{{ .Values.versions.mongo }}
          command: ['sh', '-c', "until mongo \"$(cat /config/MONGO_URI)\" --eval \"db.adminCommand('ping')\"; do echo waiting for mongodb; sleep 2; done"]
          volumeMounts:
            - name: mongo-config
              mountPath: /config
          securityContext:
            runAsNonRoot: true
            runAsUser: 999
      containers:
        - envFrom:
            - configMapRef:
                name: manager-config
            - secretRef:
                name: manager-config
          image: harness/manager-signed:{{ .Values.versions.manager }}
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 65534
            runAsNonRoot: true
          livenessProbe:
            failureThreshold: 20
            initialDelaySeconds: 90
            httpGet:
              path: /api/version
              port: 9090
              scheme: HTTP
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
            - containerPort: 9879
              protocol: TCP       
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /api/health
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: {{ .Values.manager.resources.limits.memory }}
              cpu: {{ .Values.manager.resources.limits.cpu }}
            requests:
              memory: {{ .Values.manager.resources.requests.memory }}
              cpu: {{ .Values.manager.resources.requests.cpu }}
      volumes:
        - name: mongo-config
          secret:
            secretName: manager-config
            items:
              - key: MONGO_URI
                path: MONGO_URI
